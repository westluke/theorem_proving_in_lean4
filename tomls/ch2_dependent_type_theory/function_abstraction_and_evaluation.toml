[[questions]]
type = "MultipleChoice"
prompt.prompt = """
What is the type of the following expression?

`fun (x : Nat) => (fun (t : Type 2) => x)`
"""
prompt.distractors = [
    "`Nat`",
    "`Type → Type 3 → Type`",
    "`Nat → Type 3 → Nat`"
]
answer.answer = "`Nat → Type 2 → Nat`"

[[questions]]
type = "MultipleChoice"
prompt.prompt = """
Which choice is equivalent to the following expression?

`fun (x : Nat) => fun (y : Nat) => x + y`
"""
prompt.distractors = [
    "`fun x y => x + y`",
    "both",
    "neither",
]
answer.answer = "`fun (x y : Nat) => x + y`"
prompt.answerIndex = 1
context = "Functions that appear to take two arguments, like `fun (x y : Nat) => x + y`, actually take one argument, and return a function taking the second argument. The reason that `fun x y => x + y` is not a correct answer is that it does not constrain `x` and `y` to be natural numbers."

[[questions]]
type = "MultipleChoice"
prompt.prompt = """
Which expression has the following type?

`(Nat → Nat) → (Nat → Nat)`
"""
prompt.distractors = [
    "`fun (x y z : Nat) => x + y + z`",
    "`fun (fx fy : Nat → Nat) => (fx 0) + (fx 1)`",
    "`(fun (x : Nat) => x + 1) ((fun (x : Nat) => x + 2) 3)`",
]
answer.answer = "`fun (fx : Nat → Nat) => fun (y : Nat) => fx y`"



